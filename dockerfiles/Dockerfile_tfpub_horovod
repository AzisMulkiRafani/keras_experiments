# docker build \
#   --build-arg BASECONTAINER=tensorflow_from_docker_hub \
#   --build-arg NCCL2DEBFILE=local_path_to_NCCL2_debfile \
#   -t tf1.3.0_horovod -f ./dockerfiles/Dockerfile_tfpub_horovod .

ARG BASECONTAINER=tensorflow/tensorflow:1.3.0-devel-gpu

FROM $BASECONTAINER

# Download NCCL2 from: https://developer.nvidia.com/nccl/nccl-download
ARG NCCL2DEBFILE=NCCL2/nccl-repo-ubuntu1604-2.0.5-ga-cuda8.0_2-1_amd64.deb

COPY ${NCCL2DEBFILE} NCCL2/nccl2.deb

# Install NCCL2
RUN dpkg -i NCCL2/nccl2.deb && \
    apt-get update && apt-get -f install && \
    apt-get install -y libnccl2 libnccl-dev && \
    rm -rf NCCL2


# Install OpenMPI. Default in Ubuntu 16 is 1.10.2
RUN apt-get update && apt-get install -y \
        mpi-default-dev \
        mpi-default-bin && \
    rm -rf /var/lib/apt/lists/*


# Uncomment below, comment out above, and install your choice of MPI. Modify
# http path below as needed.
#RUN apt-get update && apt-get install -y gfortran ssh
#ARG OPENMPI_URL=https://www.open-mpi.org/software/ompi/v3.0/downloads/openmpi-3.0.0.tar.gz
#RUN wget -O /tmp/openmpi.tar.gz $OPENMPI_URL && \
#    cd /tmp && mkdir openmpi && \
#    tar -zxf openmpi.tar.gz --strip-components=1 -C openmpi && cd openmpi && \
#    # ./configure --prefix=/usr/local/openmpi --with-cuda CXX=g++ CC=gcc FC=gfortran F90=gfortran F77=gfortran && \
#    ./configure --prefix=/usr/local/openmpi --with-cuda && \
#    make -j && make all install && \
#    rm -rf /tmp/*
#
#ENV MPIROOT /usr/local/openmpi
#ENV PATH ${MPIROOT}/bin:${PATH}
#ENV LD_LIBRARY_PATH ${MPIROOT}/lib:${LD_LIBRARY_PATH}
#ENV MANPATH $MPIROOT/share/man:$MANPATH


# Install horovod
# Doing the symbolic link with /usr/local/cuda/lib64/stubs otherwise horovod
# will not install.
RUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 && \
    LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH} && \
    HOROVOD_GPU_ALLREDUCE=NCCL pip install --no-cache-dir horovod && \
    rm /usr/local/cuda/lib64/stubs/libcuda.so.1
